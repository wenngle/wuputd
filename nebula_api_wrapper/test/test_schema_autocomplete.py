# coding: utf-8

"""
    nebula-api

    The public Nebula Labs API for access to pertinent UT Dallas data

    The version of the OpenAPI document: 1.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.schema_autocomplete import SchemaAutocomplete

class TestSchemaAutocomplete(unittest.TestCase):
    """SchemaAutocomplete unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SchemaAutocomplete:
        """Test SchemaAutocomplete
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SchemaAutocomplete`
        """
        model = SchemaAutocomplete()
        if include_optional:
            return SchemaAutocomplete(
                course_numbers = [
                    openapi_client.models.schema/course_number_academic_sessions.schema.CourseNumberAcademicSessions(
                        academic_sessions = [
                            openapi_client.models.schema/academic_session_sections.schema.AcademicSessionSections(
                                academic_session = openapi_client.models.schema/simple_academic_session.schema.SimpleAcademicSession(
                                    name = '', ), 
                                sections = [
                                    openapi_client.models.schema/section_number_professors.schema.SectionNumberProfessors(
                                        professors = [
                                            openapi_client.models.schema/simple_professor.schema.SimpleProfessor(
                                                first_name = '', 
                                                last_name = '', )
                                            ], 
                                        section_number = '', )
                                    ], )
                            ], 
                        course_number = '', )
                    ],
                subject_prefix = ''
            )
        else:
            return SchemaAutocomplete(
        )
        """

    def testSchemaAutocomplete(self):
        """Test SchemaAutocomplete"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
