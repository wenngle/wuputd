# coding: utf-8

"""
    nebula-api

    The public Nebula Labs API for access to pertinent UT Dallas data

    The version of the OpenAPI document: 1.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.schema_academic_session_sections import SchemaAcademicSessionSections

class TestSchemaAcademicSessionSections(unittest.TestCase):
    """SchemaAcademicSessionSections unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SchemaAcademicSessionSections:
        """Test SchemaAcademicSessionSections
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SchemaAcademicSessionSections`
        """
        model = SchemaAcademicSessionSections()
        if include_optional:
            return SchemaAcademicSessionSections(
                academic_session = openapi_client.models.schema/simple_academic_session.schema.SimpleAcademicSession(
                    name = '', ),
                sections = [
                    openapi_client.models.schema/section_number_professors.schema.SectionNumberProfessors(
                        professors = [
                            openapi_client.models.schema/simple_professor.schema.SimpleProfessor(
                                first_name = '', 
                                last_name = '', )
                            ], 
                        section_number = '', )
                    ]
            )
        else:
            return SchemaAcademicSessionSections(
        )
        """

    def testSchemaAcademicSessionSections(self):
        """Test SchemaAcademicSessionSections"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
