# coding: utf-8

"""
    nebula-api

    The public Nebula Labs API for access to pertinent UT Dallas data

    The version of the OpenAPI document: 1.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.schema_api_response_schema_professor import SchemaAPIResponseSchemaProfessor

class TestSchemaAPIResponseSchemaProfessor(unittest.TestCase):
    """SchemaAPIResponseSchemaProfessor unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SchemaAPIResponseSchemaProfessor:
        """Test SchemaAPIResponseSchemaProfessor
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SchemaAPIResponseSchemaProfessor`
        """
        model = SchemaAPIResponseSchemaProfessor()
        if include_optional:
            return SchemaAPIResponseSchemaProfessor(
                data = openapi_client.models.schema/professor.schema.Professor(
                    _id = '', 
                    email = '', 
                    first_name = '', 
                    image_uri = '', 
                    last_name = '', 
                    office = openapi_client.models.schema/location.schema.Location(
                        building = '', 
                        map_uri = '', 
                        room = '', ), 
                    office_hours = [
                        openapi_client.models.schema/meeting.schema.Meeting(
                            end_date = '', 
                            end_time = '', 
                            location = openapi_client.models.schema/location.schema.Location(
                                building = '', 
                                map_uri = '', 
                                room = '', ), 
                            meeting_days = [
                                ''
                                ], 
                            modality = '', 
                            start_date = '', 
                            start_time = '', )
                        ], 
                    phone_number = '', 
                    profile_uri = '', 
                    sections = [
                        ''
                        ], 
                    titles = [
                        ''
                        ], ),
                message = '',
                status = 56
            )
        else:
            return SchemaAPIResponseSchemaProfessor(
        )
        """

    def testSchemaAPIResponseSchemaProfessor(self):
        """Test SchemaAPIResponseSchemaProfessor"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
