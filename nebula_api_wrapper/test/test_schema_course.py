# coding: utf-8

"""
    nebula-api

    The public Nebula Labs API for access to pertinent UT Dallas data

    The version of the OpenAPI document: 1.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.schema_course import SchemaCourse

class TestSchemaCourse(unittest.TestCase):
    """SchemaCourse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SchemaCourse:
        """Test SchemaCourse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SchemaCourse`
        """
        model = SchemaCourse()
        if include_optional:
            return SchemaCourse(
                id = '',
                activity_type = '',
                attributes = openapi_client.models.attributes.attributes(),
                catalog_year = '',
                class_level = '',
                co_or_pre_requisites = openapi_client.models.schema/collection_requirement.schema.CollectionRequirement(
                    name = '', 
                    options = [
                        None
                        ], 
                    required = 56, 
                    type = '', ),
                corequisites = openapi_client.models.schema/collection_requirement.schema.CollectionRequirement(
                    name = '', 
                    options = [
                        None
                        ], 
                    required = 56, 
                    type = '', ),
                course_number = '',
                credit_hours = '',
                description = '',
                enrollment_reqs = '',
                grading = '',
                internal_course_number = '',
                laboratory_contact_hours = '',
                lecture_contact_hours = '',
                offering_frequency = '',
                prerequisites = openapi_client.models.schema/collection_requirement.schema.CollectionRequirement(
                    name = '', 
                    options = [
                        None
                        ], 
                    required = 56, 
                    type = '', ),
                school = '',
                sections = [
                    ''
                    ],
                subject_prefix = '',
                title = ''
            )
        else:
            return SchemaCourse(
        )
        """

    def testSchemaCourse(self):
        """Test SchemaCourse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
