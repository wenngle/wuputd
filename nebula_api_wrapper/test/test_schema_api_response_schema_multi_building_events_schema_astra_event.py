# coding: utf-8

"""
    nebula-api

    The public Nebula Labs API for access to pertinent UT Dallas data

    The version of the OpenAPI document: 1.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.schema_api_response_schema_multi_building_events_schema_astra_event import SchemaAPIResponseSchemaMultiBuildingEventsSchemaAstraEvent

class TestSchemaAPIResponseSchemaMultiBuildingEventsSchemaAstraEvent(unittest.TestCase):
    """SchemaAPIResponseSchemaMultiBuildingEventsSchemaAstraEvent unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SchemaAPIResponseSchemaMultiBuildingEventsSchemaAstraEvent:
        """Test SchemaAPIResponseSchemaMultiBuildingEventsSchemaAstraEvent
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SchemaAPIResponseSchemaMultiBuildingEventsSchemaAstraEvent`
        """
        model = SchemaAPIResponseSchemaMultiBuildingEventsSchemaAstraEvent()
        if include_optional:
            return SchemaAPIResponseSchemaMultiBuildingEventsSchemaAstraEvent(
                data = openapi_client.models.schema/multi_building_events_schema_astra_event.schema.MultiBuildingEvents-schema_AstraEvent(
                    buildings = [
                        openapi_client.models.schema/single_building_events_schema_astra_event.schema.SingleBuildingEvents-schema_AstraEvent(
                            building = '', 
                            rooms = [
                                openapi_client.models.schema/room_events_schema_astra_event.schema.RoomEvents-schema_AstraEvent(
                                    events = [
                                        openapi_client.models.schema/astra_event.schema.AstraEvent(
                                            activity_name = '', 
                                            capacity = 1.337, 
                                            current_state = '', 
                                            end_date = '', 
                                            meeting_type = '', 
                                            not_allowed_usage_mask = 1.337, 
                                            start_date = '', 
                                            usage_color = '', )
                                        ], 
                                    room = '', )
                                ], )
                        ], 
                    date = '', ),
                message = '',
                status = 56
            )
        else:
            return SchemaAPIResponseSchemaMultiBuildingEventsSchemaAstraEvent(
        )
        """

    def testSchemaAPIResponseSchemaMultiBuildingEventsSchemaAstraEvent(self):
        """Test SchemaAPIResponseSchemaMultiBuildingEventsSchemaAstraEvent"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
